// controllers/comments.js
import CommentModel from '../models/Comment.js';

// GET /comments?post=postId
export const getByPostId = async (req, res) => {
	try {
		const { post } = req.query;
		if (!post) {
			return res.status(400).json({ message: '–ù–µ —É–∫–∞–∑–∞–Ω post' });
		}

		const comments = await CommentModel.find({ post })
			.populate('user', 'fullName avatarUrl')
			.sort({ createdAt: -1 })
			.exec();

		res.json(comments);

	} catch (err) {
		console.error(err);
		res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤' });
	}
};

// POST /comments
export const create = async (req, res) => {
	try {
		console.log('Creating comment:', req.body); // üîç –ß—Ç–æ –ø—Ä–∏—à–ª–æ
		console.log('User ID from token:', req.userId); // üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

		const doc = new CommentModel({
			text: req.body.text,
			user: req.userId,
			post: req.body.post,
		});

		const comment = await doc.save();
		console.log('Comment saved:', comment); // üîç –£—Å–ø–µ—à–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ

		const populatedComment = await CommentModel.findById(comment._id)
			.populate('user', 'fullName avatarUrl');

		res.status(201).json(populatedComment);
	} catch (err) {
		console.error('Comment creation error:', err); // üîç –û—à–∏–±–∫–∞
		res.status(500).json({ message: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π' });
	}
};
